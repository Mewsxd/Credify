// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) // Auto-incrementing primary key
  email     String   @unique                      // Unique email field
  password  String                               // Hashed password
  name      String?                               // Optional name field
  createdAt DateTime @default(now())              // Timestamp for when the user was created
  updatedAt DateTime @updatedAt                   // Automatically updated timestamp
  spaces    Space[]
}

model Testimony {
  id         Int      @id @default(autoincrement())
  spaceId    Int
  review     String
  name       String
  email      String?  // Optional based on toggle
  social     String?  // Optional based on toggle
  rating     Int?  // Optional based on toggle
  address    String?  // Optional based on toggle
  company    String?  // Optional based on toggle
  createdAt  DateTime @default(now())
  space      Space    @relation(fields: [spaceId], references: [id])
}

model Space {
  id                Int       @id @default(autoincrement())
  title             String    @db.VarChar(100)
  message           String  
  createdAt         DateTime  @default(now()) 
  questions         String[]
  collectEmail      Boolean
  collectCompany    Boolean
  collectSocial     Boolean
  collectAddress    Boolean
  collectRating     Boolean
  theme             Boolean
  buttonColor       String?
  user              User      @relation(fields: [userId], references: [id])
  testimonies       Testimony[]
  userId            Int        
}